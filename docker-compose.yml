version: '3.8'

services:
  # API Gateway
  api_gateway:
    build:
      context: .
      dockerfile: aichildedu/api_gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - USER_SERVICE_URL=http://user_service:8001
      - CONTENT_SERVICE_URL=http://content_service:8002
      - LEARNING_SERVICE_URL=http://learning_service:8003
      - AI_TEXT_SERVICE_URL=http://ai_text_service:8010
      - AI_IMAGE_SERVICE_URL=http://ai_image_service:8011
      - AI_VOICE_SERVICE_URL=http://ai_voice_service:8012
      - AI_VIDEO_SERVICE_URL=http://ai_video_service:8013
      - RECOMMENDATION_SERVICE_URL=http://recommendation_service:8020
      - ANALYTICS_SERVICE_URL=http://analytics_service:8030
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=aiedu
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-super-secret-key-change-in-production}
      - RATE_LIMIT_WINDOW=60
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGINS=*
    depends_on:
      - user_service
      - ai_text_service
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - aichildedu-network

  # User Service
  user_service:
    build:
      context: .
      dockerfile: aichildedu/user_service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/aichildedu
      - SECRET_KEY=${SECRET_KEY:-super-secret-key-change-in-production}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - aichildedu-network

  # AI Text Generator Service
  ai_text_service:
    build:
      context: .
      dockerfile: aichildedu/ai_service/text_generator/Dockerfile
    ports:
      - "8010:8010"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=aiedu
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_FALLBACK_MODEL=true
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aichildedu-network

  # Databases
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=aichildedu
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - aichildedu-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - aichildedu-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - aichildedu-network

  # Object Storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - aichildedu-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  minio_data:

networks:
  aichildedu-network:
    driver: bridge 